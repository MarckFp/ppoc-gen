name: 'Deploy üöÄ'

on:
  push:
    tags:
      - "*.*.*"

jobs:
  deploy-web:
    name: 'Web üåê'
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-web
      cancel-in-progress: true
    permissions:
      contents: write
    environment:
      name: production
      url: https://ppocgen.com
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - run: |
          git config --global user.email ${{ secrets.GH_EMAIL }}
          git config --global user.name GitHub_Runner
      - run: bun install
      - run: npm --no-git-tag-version version ${{  github.ref_name }}
      - run: bun run build
        env:
          NODE_ENV: 'production'
          PPOCGEN_ENV: 'production'
          VITE_PPOCGEN_ENV: 'production'
          ADAPTER: 'cloudflare'
#      - run: bun run cloudflare-headers
      - uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          branch: main
          projectName: ppoc-gen
          directory: .svelte-kit/cloudflare
          wranglerVersion: '3'

  deploy-desktop:
    name: ${{ matrix.settings.name }}
    permissions:
      contents: write
      discussions: write
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
            name: 'MacOS ARM üçè'
          - platform: 'macos-13'
            args: '--target x86_64-apple-darwin'
            name: 'MacOS x86_64 üçè'
          - platform: 'ubuntu-latest'
            args: ''
            name: 'Linux üêß'
          - platform: 'windows-latest'
            args: ''
            name: 'Windows ü™ü'
          - platform: 'ubuntu-latest'
            args: '--target aarch64-linux-android'
            name: 'Android aarch64üì±'
          - platform: 'ubuntu-latest'
            args: '--target armv7-linux-androideabi'
            name: 'Android armv7üì±'
          - platform: 'ubuntu-latest'
            args: '--target i686-linux-android'
            name: 'Android i686üì±'
          - platform: 'ubuntu-latest'
            args: '--target x86_64-linux-android'
            name: 'Android x86_64üì±'
    runs-on: ${{ matrix.settings.platform }}
    steps:
      - uses: actions/checkout@v4
      - if: matrix.settings.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential curl wget file libxdo-dev libssl-dev libayatana-appindicator3-dev librsvg2-dev
      - if: matrix.settings.platform == 'macos-latest' || matrix.settings.platform == 'macos-13'
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: 'aarch64-apple-darwin,x86_64-apple-darwin'
      - if: contains(matrix.settings.name, 'Android')
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: 'aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android'
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - if: contains(matrix.settings.name, 'Android')
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - if: contains(matrix.settings.name, 'Android')
        uses: android-actions/setup-android@v3
      - if: contains(matrix.settings.name, 'Android')
        run: sdkmanager ndk-bundle
      - run: |
          git config --global user.email ${{ secrets.GH_EMAIL }}
          git config --global user.name GitHub_Runner
      - run: bun install
      - run: npm --no-git-tag-version version ${{  github.ref_name }}
      - if: "!contains(matrix.settings.name, 'Android')"
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PPOCGEN_ENV: 'production'
          VITE_PPOCGEN_ENV: 'production'
          #TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          #TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tauriScript: 'bun run tauri'
          tagName: ${{  github.ref_name }}
          releaseName: ${{  github.ref_name }}
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
      - if: "contains(matrix.settings.name, 'Android')"
        run: |
          bun tauri android build
          mv ./src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-signed.apk ./src-tauri/gen/android/app/build/outputs/apk/universal/release/ppocgen-${{ github.ref_name }}.apk
          mv ./src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-signed.apk ./src-tauri/gen/android/app/build/outputs/apk/universal/release/ppocgen-${{ github.ref_name }}.aab
          gh release upload ${{  github.ref_name }} ./src-tauri/gen/android/app/build/outputs/apk/universal/release/ppocgen-${{ github.ref_name }}.apk
          gh release upload ${{  github.ref_name }} ./src-tauri/gen/android/app/build/outputs/apk/universal/release/ppocgen-${{ github.ref_name }}.aab
        env:
          NDK_HOME: $ANDROID_HOME/ndk/$(ls -1 $ANDROID_HOME/ndk)
#      - uses: r0adkll/upload-google-play@v1
#        with:
#          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
#          packageName: com.ppocgen
#          releaseFiles: ./src-tauri/gen/android/app/build/outputs/apk/universal/release/ppocgen-${{ github.ref_name }}.aab
#          track: production
#          status: completed

name: Deploy

on:
  push:
    tags:
      - "*.*.*"

jobs:
  deploy-web:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-web
      cancel-in-progress: true
    permissions:
      pages: write
      id-token: write
      contents: write
      discussions: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    outputs:
      GHPAGES: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - run: |
          git config --global user.email ${{ secrets.GH_EMAIL }}
          git config --global user.name GitHub_Runner
      - run: bun install
      - run: npm --no-git-tag-version version ${{  github.ref_name }}
      - run: bun run build
        env:
          BASE_PATH: '/${{ github.event.repository.name }}'
          NODE_ENV: 'production'
      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: 'build/'
      - uses: actions/deploy-pages@v4
        id: deployment
  deploy-desktop:
    name: ${{ matrix.settings.name }}
    permissions:
      contents: write
      discussions: write
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
            name: 'MacOS ARM'
          - platform: 'macos-13'
            args: '--target x86_64-apple-darwin'
            name: 'MacOS x86_64'
          - platform: 'ubuntu-latest'
            args: ''
            name: 'Linux'
          - platform: 'windows-latest'
            args: ''
            name: 'Windows x86_64'
    runs-on: ${{ matrix.settings.platform }}
    steps:
      - uses: actions/checkout@v4
      - if: matrix.settings.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - run: |
          git config --global user.email ${{ secrets.GH_EMAIL }}
          git config --global user.name GitHub_Runner
      - run: bun install
      - run: npm --no-git-tag-version version ${{  github.ref_name }}
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          #TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tauriScript: 'bun run tauri'
          tagName: ${{  github.ref_name }}
          releaseName: ${{  github.ref_name }}
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
  deploy-android:
    needs: deploy-web
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/googlechromelabs/bubblewrap:latest
    env:
      GHPAGES: ${{ needs.deploy-web.outputs.GHPAGES }}
      BUBBLEWRAP_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSPHRASE }}
      BUBBLEWRAP_KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSPHRASE }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      - uses: android-actions/setup-android@v3
      - run: mkdir android && cd android
      - run: echo '{"jdkPath":"'$JAVA_HOME'","androidSdkPath":"'$ANDROID_SDK_ROOT'"}' > $HOME/.bubblewrap/config.json
      - run: echo "${{ secrets.ANDROID_KEYSTORE }}" > android.keystore.asc
      - run: gpg -d --passphrase "${{ secrets.ANDROID_KEYSTORE_PASSPHRASE }}" --batch android.keystore.asc > android.keystore
      - run: yes '' | bubblewrap init --manifest $GHPAGES
      - run: bubblewrap build
      - run: gh release upload ${{  github.ref_name }} app-release-signed.apk
      - run: gh release upload ${{  github.ref_name }} app-release-bundle.aab

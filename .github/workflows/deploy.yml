name: Deploy

on:
  push:
    tags:
      - "*.*.*"
  workflow_dispatch:

jobs:
  upgrade-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 21
      - run: |
          git config --global user.name 'MarckFp'
          git config --global user.email '${{ secrets.GH_EMAIL }}'
          npm version ${{  github.ref_name }}
          sed -i -e 's/^version = .*/version = ${{  github.ref_name }}"/' src-tauri/Cargo.toml
          git commit -am "Upgrade to ${{  github.ref_name }}"
          git push origin main
  deploy-web:
    runs-on: ubuntu-latest
    needs: upgrade-version
    permissions:
      pages: write
      id-token: write
      contents: write
      discussions: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 21
      - uses: oven-sh/setup-bun@v1
      - run: bun install --production
      - run: bun run build
        env:
          BASE_PATH: '/${{ github.event.repository.name }}'
          NODE_ENV: 'production'
      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: 'build/'
      - uses: actions/deploy-pages@v4
        id: deployment
  deploy-linux:
    runs-on: ubuntu-latest
    needs: upgrade-version
    permissions:
      contents: write
      discussions: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 21
      - uses: oven-sh/setup-bun@v1
      - run: sudo apt-get update && sudo apt-get install libwebkit2gtk-4.0-dev build-essential curl wget file libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
      - run: bun install --production
      - run: bun tauri build --ci
      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./src-tauri/target/release/bundle/deb/ppoc-gen_${{  github.ref_name }}_amd64.deb
            ./src-tauri/target/release/bundle/appimage/ppoc-gen_${{  github.ref_name }}_amd64.AppImage
  deploy-windows:
    runs-on: windows-latest
    needs: upgrade-version
    permissions:
      contents: write
      discussions: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 21
      - uses: oven-sh/setup-bun@v1
      - run: bun install --production
      - run: bun tauri build --ci
      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./src-tauri/target/release/bundle/msi/ppoc-gen_${{  github.ref_name }}_x64_en-US.msi
            ./src-tauri/target/release/bundle/nsis/ppoc-gen_${{  github.ref_name }}_x64-setup.exe
  deploy-macos:
    runs-on: macos-latest
    needs: upgrade-version
    permissions:
      contents: write
      discussions: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 21
      - uses: oven-sh/setup-bun@v1
      - run: bun install --production
      - run: bun tauri build --ci
      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./src-tauri/target/release/bundle/dmg/ppoc-gen_${{  github.ref_name }}_x64.dmg
            ./src-tauri/target/release/bundle/macos/ppoc-gen.app
